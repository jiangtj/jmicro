# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll and Maven Site with GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Move site to pages artifact dir
        run: |
          mkdir ./temp_site
          cp -r ./_site/* ./temp_site
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Install Dependencies Local
        run: mvn install -P lib
      - name: Build Maven Site
        run: mvn site
      - name: Move site to pages artifact dir
        run: |
          mv ./micro-common/target/site ./temp_site/micro-common
          mv ./micro-web/target/site ./temp_site/micro-web
          mv ./micro-auth/target/site ./temp_site/micro-auth
          mv ./micro-auth-casdoor/target/site ./temp_site/micro-auth-casdoor
          mv ./micro-auth-wechat/target/site ./temp_site/micro-auth-wechat
          mv ./micro-spring-boot-starter/target/site ./temp_site/micro-spring-boot-starter
          mv ./micro-sql-jooq/target/site ./temp_site/micro-sql-jooq
          mv ./micro-test/target/site ./temp_site/micro-test
          mv ./micro-pic-upload-starter/target/site ./temp_site/micro-pic-upload-starter
          mv ./micro-flyway-starter/target/site ./temp_site/micro-flyway-starter
          mv ./micro-payment/target/site ./temp_site/micro-payment
      - name: Move dokka to pages artifact dir
        run: |
          mv ./micro-common/target/dokka ./temp_site/micro-common
          mv ./micro-web/target/dokka ./temp_site/micro-web
          mv ./micro-auth/target/dokka ./temp_site/micro-auth
          mv ./micro-auth-casdoor/target/dokka ./temp_site/micro-auth-casdoor
          mv ./micro-auth-wechat/target/dokka ./temp_site/micro-auth-wechat
          mv ./micro-spring-boot-starter/target/dokka ./temp_site/micro-spring-boot-starter
          mv ./micro-sql-jooq/target/dokka ./temp_site/micro-sql-jooq
          mv ./micro-test/target/dokka ./temp_site/micro-test
          mv ./micro-pic-upload-starter/target/dokka ./temp_site/micro-pic-upload-starter
          mv ./micro-flyway-starter/target/dokka ./temp_site/micro-flyway-starter
          mv ./micro-payment/target/dokka ./temp_site/micro-payment
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './temp_site'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
